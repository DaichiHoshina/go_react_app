version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      # - restore_cache:
      #     keys:
      #       - go-mod-v4-{{ checksum "go.sum" }}
      - run: go mod download
      - run: go get ./...
      - run: go test -v ./...
      - run: go build -o main main.go
      - store_artifacts:
          path: main
          destination: main
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - $GOPATH/pkg/mod
  build_image:
    docker:
      - image: docker:18.09.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws cli
          command: |
            apk add --no-cache --update py-pip
            pip install awscli
      - run:
          name: build image
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker build -t ${ECR_DOMAIN}:$CIRCLE_SHA1 -t ${ECR_DOMAIN}:latest .
      - run:
          name: Push docker image
          command: |
            docker push ${ECR_DOMAIN}:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN}:latest
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - run:
          name: install aws cli
          command: |
            sudo pip install awscli
      - run:
          name: download jq
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            mv jq-linux64 jq
      - run:
          name: login
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: deploy
          command: |
            aws ecs describe-task-definition --task-definition webapp-service | jq  '.taskDefinition | { containerDefinitions: .containerDefinitions }' > definition.json
            aws ecs register-task-definition --execution-role-arn role„ÅÆarn --family webapp-service --cli-input-json file://definition.json
            aws ecs update-service --cluster sample-ecs-cluster --service webapp-service --task-definition webapp-service
      - run:
          name: migration
          command: |
            aws ecs run-task --cluster sample-ecs-cluster --task-definition webapp-migration
workflows:
  version: 2
  test:
    jobs:
      - build
      - build_image:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_image
          filters:
            branches:
              only: master
